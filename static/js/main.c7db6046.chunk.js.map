{"version":3,"sources":["components/contactListItem/ContactListItem.module.css","components/container/Container.module.css","components/contactList/ContactList.module.css","components/contactForm/ContactForm.module.css","components/container/Container.js","components/contactForm/ContactForm.js","components/filter/Filter.js","components/contactListItem/ContactListItem.js","components/contactList/ContactList.js","App.js","index.js","components/filter/Filter.module.css"],"names":["module","exports","Container","children","className","s","container","ContactForm","state","name","number","nameInputId","shortid","generate","phoneNumberInputId","handleInputChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","label","type","input","onChange","pattern","title","required","id","autoComplete","button","color","size","Component","Filter","onBlur","filter","castomInput","ContactListItem","onDeleteContact","contactsItem","onClick","ContactList","contacts","contactList","map","App","addContact","newContact","find","contact","toast","warn","success","deleteContact","contactId","prevState","changeFilter","handleBlur","getVisibleContacts","length","error","normalizedFilter","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","nextContacts","setItem","stringify","visibleContacts","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7db6046.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsItem\":\"ContactListItem_contactsItem__tx2sb\",\"button\":\"ContactListItem_button__1abC3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1c1Vg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2ph2q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__2Jy45\",\"input\":\"ContactForm_input__1dTb1\",\"button\":\"ContactForm_button__3gFfi\"};","import s from \"./Container.module.css\";\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport { ImCheckmark } from \"react-icons/im\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    nameInputId = shortid.generate();\r\n    phoneNumberInputId = shortid.generate();\r\n\r\n    handleInputChange = (event) => {\r\n        const { name, value } = event.currentTarget;\r\n        this.setState({ [name]: value , id: shortid.generate()});\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.reset();\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n          <form onSubmit = {this.handleSubmit}>\r\n          <label htmlFor = {this.nameInputId} className={s.label}>\r\n            Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className={s.input}\r\n            value={this.state.name}\r\n            onChange = {this.handleInputChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            id={this.nameInputId}\r\n            autoComplete = \"off\"\r\n          />\r\n           </label>\r\n                \r\n            <label htmlFor={this.phoneNumberInputId} className={s.label}>\r\n            Number \r\n            <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            className={s.input}\r\n            value={this.state.number}\r\n            onChange = {this.handleInputChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            id={this.phoneNumberInputId}\r\n            autoComplete = \"off\"\r\n        />       \r\n           </label>\r\n                \r\n          <button\r\n          className={s.button}\r\n          type=\"submit\"\r\n          >\r\n            Add contact  <ImCheckmark color=\"rgb(11, 100, 11)\" size=\"30px\"/>\r\n          </button>\r\n        </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChange, onBlur }) => (\r\n  <div className = {s.filter}>\r\n  <label className={s.label}>\r\n      Find contacts by name\r\n      <div className={s.castomInput}>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        className={s.input}\r\n        />\r\n     </div>\r\n  </label>\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ImBin, ImRadioChecked2 } from \"react-icons/im\";\r\nimport s from \"./ContactListItem.module.css\";\r\n\r\nconst ContactListItem = ({  id, name, number, onDeleteContact }) => {\r\n    return (\r\n            <li\r\n            className={s.contactsItem}\r\n            >\r\n            <ImRadioChecked2 color=\"rgb(11, 100, 11)\" size=\"10px\"/> {name}:  {number}\r\n            \r\n            <button\r\n            className={s.button}\r\n            type=\"button\"\r\n            aria-label=\"Delete contact\"    \r\n            onClick={() => onDeleteContact(id)}\r\n            >\r\n            <ImBin color=\"rgb(11, 100, 11)\" size=\"30px\"/>\r\n            </button>\r\n            </li>\r\n    )\r\n};\r\n\r\nContactListItem.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactListItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from \"./ContactList.module.css\";\r\n\r\nimport ContactListItem from '../contactListItem/ContactListItem';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n    <ul className={s.contactList}>\r\n        {contacts.map(({ id, name, number, }) => (\r\n            <ContactListItem\r\n                key={id}\r\n                id={id}\r\n                name={name}\r\n                number={number}\r\n                onDeleteContact={onDeleteContact}\r\n            />\r\n        ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array,\r\n}\r\n\r\nexport default ContactList;","//import './App.css';\nimport React, { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Container from './components/container/Container';\nimport ContactForm from './components/contactForm/ContactForm';\nimport Filter from './components/filter/Filter';\nimport ContactList from './components/contactList/ContactList';\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: ''\n  }\n\n  componentDidMount() {\n\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\n    }\n    }\n\n  addContact = (newContact) => {\n    if (this.state.contacts.find(contact => contact.name === newContact.name)) {\n      toast.warn(`${newContact.name} is already in your phonebook!`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n\n    toast.success(`${newContact.name} has been added to your phonebook!`);\n  };\n\n  deleteContact = (contactId) => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n    toast.warn(\"Contact deleted from your phonebook!\");\n  };\n\n  changeFilter = (event) => {\n    this.setState({ filter: event.currentTarget.value });\n  }\n\n  handleBlur = () => {\n   if (this.getVisibleContacts().length === 0) {\n     toast.error(\"No contact found. Enter the correct request!\")\n    } else {\n      toast.success(` ${this.getVisibleContacts().length} contacts found!`)\n    }\n  }\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n   \n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  \n  render() {\n    const visibleContacts = this.getVisibleContacts();\n   \n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={3000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n          />\n        <h2>Contacts</h2>\n        <Filter\n          value={this.state.filter}\n          onChange={this.changeFilter}\n          onBlur={this.handleBlur}\n        />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n     </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1kkcp\",\"label\":\"Filter_label__1K3sq\",\"input\":\"Filter_input__3dc_Q\",\"castomInput\":\"Filter_castomInput__1fUyw\"};"],"sourceRoot":""}